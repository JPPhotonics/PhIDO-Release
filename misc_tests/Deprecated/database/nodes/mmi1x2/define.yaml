nodeLabels:
  - silicon
  - passive
  - power_splitter
  - 1x2 # can be parsed from analytical s-param, do we want 1x2 or #ports=3?
  - narrowband # can be parsed from fdtd data
  - dichroic_filter

# nodeProperties:
name: mmi1x2 # not necessary, could be parsed from directory name
description: multimode interferometer
pythonFunc: |
  mmi1x2()
yamlCode:
  component: mmi1x2
  settings: # python expression (anything goes) | default value: must be within the python expression
      width: '[0.41, 0.51] | 0.41'                      # input and output straight width. Defaults to cross_section width.
      width_taper: 'np.arange(0.5, 1.5, 0.5)| 0.5'      # interface between input straights and mmi region.
      length_taper: 'np.arange(2, 11, 1) | 10'          # into the mmi region.
      length_mmi: 'np.arange(1.8, 10, 0.5) | 1.8'       # in x direction.
      width_mmi: 'np.arange(1.5, 5, 0.5) | 1.5'         # in y direction.
      gap_mmi: 'np.arange(0.3, 1, 0.2) | 0.3'           # gap between tapered wg.
      # taper:                                          # taper function.
      # cross_section: 'xs_sc'                          # specification (CrossSection, string or dict).
design: # center wl, bw,
  wavelength: [1.31, 0.1] # um
  # polarization: ['te']
design_objective:
  S21: 0.5
nominal_sparam: # power transmission in linear
  S11: 0
  S22: 0
  S33: 0
  S12: 0.5
  S21: 0.5
  S13: 0.5
  S31: 0.5
  S23: 0
  S32: 0

#        length_mmi
#         <------>
#         ________
#        |        |
#        |         \__
#        |          __  o2
#     __/          /_ _ _ _
#  o1 __          | _ _ _ _| gap_mmi
#       \          \__
#        |          __  o3
#        |         /
#        |________|
#      <->
# length_taper


# import gdsfactory as gf

# c = gf.components.mmi1x2(width_taper=1.0, length_taper=10.0, length_mmi=5.5, width_mmi=2.5, gap_mmi=0.25, cross_section='xs_sc')
# c.plot()
